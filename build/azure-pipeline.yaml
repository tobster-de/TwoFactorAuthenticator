name: TwoFactorAuthenticator
trigger: [ master ]
pr: [ master ]

variables:
  buildConfiguration: Release

jobs:
- job: Test

#  strategy:
#    matrix:
#      linux:
#        imageName: 'ubuntu-latest'
#      mac:
#        imageName: 'macOS-latest'
#      windows:
#        imageName: 'windows-latest'

  pool:
#    vmImage: $(imageName)
    vmImage: 'windows-latest'

  steps:

  # https://learn.microsoft.com/de-de/azure/devops/pipelines/tasks/reference/use-dotnet-v2
  # https://github.com/dotnet/core/blob/main/release-notes/releases-index.json
  - task: UseDotNet@2
    inputs:
      version: '3.1.x'  #lts
      packageType: runtime
  - task: UseDotNet@2
    inputs:
      version: '6.0.x'  #lts
      packageType: runtime
  - task: UseDotNet@2
    inputs:
      version: '8.0.x'  #lts
      packageType: runtime
      
  # There is a legacy project in the solution that dotnet won't build, so restoring and building individual projects
  - script: |
      dotnet restore ./TwoFactorAuthenticator/TwoFactorAuthenticator.csproj 
      dotnet restore ./TwoFactorAuthenticator.QrCoder/TwoFactorAuthenticator.QrCoder.csproj --no-dependencies
      dotnet restore ./TwoFactorAuthenticator.WinForms/TwoFactorAuthenticator.WinForms.csproj --no-dependencies
      dotnet restore ./TwoFactorAuthenticator.Tests/TwoFactorAuthenticator.Tests.csproj --no-dependencies
    displayName: restore packages

  - script: |
      dotnet build ./TwoFactorAuthenticator/TwoFactorAuthenticator.csproj --configuration $(buildConfiguration) --no-restore
      dotnet build ./TwoFactorAuthenticator.QrCoder/TwoFactorAuthenticator.QrCoder.csproj --configuration $(buildConfiguration) --no-restore
      dotnet build ./TwoFactorAuthenticator.WinForms/TwoFactorAuthenticator.WinForms.csproj --configuration $(buildConfiguration) --no-restore
      dotnet build ./TwoFactorAuthenticator.Tests/TwoFactorAuthenticator.Tests.csproj --configuration $(buildConfiguration) --no-restore --no-dependencies
    displayName: build projects

  - task: DotNetCoreCLI@2
    displayName: test
    inputs:
      command: test
      projects: './TwoFactorAuthenticator.Tests/TwoFactorAuthenticator.Tests.csproj'
      arguments: '--configuration $(buildConfiguration)'

- job: Pack
  dependsOn: Test
  condition: and(succeeded('Test'), or(eq(variables['Build.SourceBranchName'], 'master'),eq(variables['Build.SourceBranchName'], 'develop')))

  pool:
    vmImage: 'windows-latest'

  steps:
  # This creates the Nuget package only if the change was from "master". It also supports publishing from a "develop" branch, which is not currently used in this project
  - script: |
      dotnet build ./TwoFactorAuthenticator/TwoFactorAuthenticator.csproj --configuration $(buildConfiguration)
      dotnet build ./TwoFactorAuthenticator.QrCoder/TwoFactorAuthenticator.QrCoder.csproj --configuration $(buildConfiguration)
      dotnet build ./TwoFactorAuthenticator.WinForms/TwoFactorAuthenticator.WinForms.csproj --configuration $(buildConfiguration)
    displayName: build packages

  - script: |
      dotnet pack ./TwoFactorAuthenticator/TwoFactorAuthenticator.csproj --configuration $(buildConfiguration) --no-build --output %Build_ArtifactStagingDirectory%
      dotnet pack ./TwoFactorAuthenticator.QrCoder/TwoFactorAuthenticator.QrCoder.csproj --configuration $(buildConfiguration) --no-build --output %Build_ArtifactStagingDirectory%
      dotnet pack ./TwoFactorAuthenticator.WinForms/TwoFactorAuthenticator.WinForms.csproj --configuration $(buildConfiguration) --no-build --output %Build_ArtifactStagingDirectory%
    displayName: pack

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: NugetPackage
